class EZPZ_BBCode_Parser{#a=[];#b=[];#c=null;#d={inline:["b","i","s","u","link","c","spoiler","img","size","color"],recursive:["box","quote","notice","centre","spoilerbox"]};constructor(e=[]){if(!Array.isArray(e))throw TypeError("templateRules must be an array.");this.setRules(e)}set lineBreakTemplate(e){if("function"!=typeof e)throw TypeError("lineBreakTemplate must be a function.");this.#c=e}set textWrapTags(e){if("object"!=typeof e||!Array.isArray(e.inline)||!Array.isArray(e.recursive))throw TypeError("textWrapTags must be an object with 'inline' and 'recursive' arrays.");this.#d.inline=e.inline,this.#d.recursive=e.recursive}addRule(e){if(!e||"object"!=typeof e)throw TypeError("addRule expects a rule object.");this.#a.push(this.#e(e))}setRules(e){if(!Array.isArray(e))throw TypeError("setRules expects an array of rule objects.");this.#a=e.map(e=>{if(!e||"object"!=typeof e)throw TypeError("Each rule must be an object.");return this.#e(e)})}parse(e,t={wrapText:!1,strictUnknownTag:!0,strictClosingTag:!1}){if("string"!=typeof e)throw TypeError("parse() expects the first argument to be a string.");("object"!=typeof t||null===t)&&(t={});let{wrapText:n=!1,strictUnknownTag:r=!0,strictClosingTag:i=!1}=t,l=this.escapeHTML(e);n&&(l=this.#f(l));let o=[],s=this.#g(l),p=this.#h(s,o,i),a=this.#i(p,{errors:o},r,i);return{output:a,errors:o,tokens:s,tree:p,raw:l}}forbidden(e){if("function"!=typeof e)throw TypeError("forbidden() expects a function.");let t=[],n=(e,n="This is forbidden.")=>{if("function"!=typeof e)throw TypeError("Forbidden check function must be a function.");let r={fn:e,msg:n,handler:null},i=e=>{if("function"!=typeof e)throw TypeError("Forbidden 'then' handler must be a function.");r.handler=e};return t.push(r),{then:i}};e(n),this.#b.push(...t)}#j(e){let t=[],n=null;for(let{fn:r,msg:i,handler:l}of this.#b)if(r(e)&&(t.push({errorType:"forbidden",message:i,...e}),"function"==typeof l)){let o=l(e);void 0!==o&&null===n&&(n=o)}return{messages:t,override:n}}#g(s){let p=[],a=0,u="___TAKE_ME_AWAY___";s=s.replace(/\\\\\[/g,u);let h=()=>{if("["!==s[a])return null;let e=a+1,t="",n="",r=!1,i=!1,l=0,o=a;if("/"===s[e]&&(r=!0,e++),!r&&"*"===s[e]&&"]"===s[++e]){let p=s.slice(a,e+1),u=e+1;return a=u,{type:"tag-open",name:"*",value:null,raw:p,position:{start:o,end:u}}}for(;e<s.length;){let h=s[e];if(!i&&"="===h){i=!0,e++;continue}if("["===h&&i&&l++,"]"===h){if(l>0)l--;else break}i?n+=h:t+=h,e++}if("]"!==s[e])return null;let c=s.slice(a,e+1),d=e+1;return a=d,{type:r?"tag-close":"tag-open",name:t.trim().toLowerCase(),value:i?n.trim():null,raw:c,position:{start:o,end:d}}};for(;a<s.length;){if("["===s[a]){let c=h();if(c){p.push(c);continue}p.push({type:"text",content:"[",position:{start:a,end:a+1}}),a+=1;continue}let d=s.indexOf("[",a);-1===d&&(d=s.length),p.push({type:"text",content:s.slice(a,d),position:{start:a,end:d}}),a=d}for(let f of p)"text"===f.type&&(f.content=f.content.replace(RegExp(u,"g"),"["));return p}#h(g,m=[],x=!1){let y={type:"root",children:[]},_=[{node:y,token:null}];for(let b=0;b<g.length;b++){let v=g[b],$=_[_.length-1].node;if("text"===v.type)$.children.push({type:"text",content:v.content,position:v.position});else if("tag-open"===v.type){if("*"===v.name){let T={type:"tag",name:"*",value:null,children:[],position:v.position};for(b++;b<g.length&&!("tag-open"===g[b].type&&("*"===g[b].name||"list"===g[b].name))&&!("tag-close"===g[b].type&&"list"===g[b].name);)T.children.push(g[b]),b++;b--,$.children.push(T)}else{let w={type:"tag",name:v.name,value:v.value,children:[],position:v.position,closingPosition:null};$.children.push(w),_.push({node:w,token:v})}}else if("tag-close"===v.type){if(x){let j=_[_.length-1];_.length>1&&j.node.name===v.name?(j.node.closingPosition=v.position,_.pop()):($.children.push({type:"text",content:`[/${v.name}]`,position:v.position}),m?.push({errorType:"unexpected-closing",node:{current:{children:null,closingPosition:null,name:v.name,position:v.position,type:"tag",value:null}},pointer:null}))}else{let A=-1;for(let k=_.length-1;k>=1;k--)if(_[k].node.name===v.name){A=k;break}if(-1!==A){let P=_[A];P.node.closingPosition=v.position,_.splice(A)}else $.children.push({type:"text",content:`[/${v.name}]`,position:v.position}),m?.push({errorType:"unexpected-closing",node:{current:{children:null,closingPosition:null,name:v.name,position:v.position,type:"tag",value:null}},pointer:null})}}}if(x)for(let B=_.length-1;B>=1;B--){let{node:N}=_[B],W=_[B-1].node,Z=W.children.indexOf(N);if(-1!==Z){let R=`[${N.name}${N.value?"="+N.value:""}]`+N.children.map(e=>"text"===e.type?e.content:this.#i(e,{},!0,!1)).join("");W.children[Z]={type:"text",content:R,position:N.position}}m?.push({errorType:"unclosed-tag",node:{current:N,parent:null,root:null,next:null,previous:null},pointer:null})}return y}#i(E,C={},z=!0,L=!1){if("text"===E.type){if("function"==typeof this.#c){let F={index:C.index??0,path:C.path??"0",depth:(C.path??"0").split(".").length-1},M=E.content.split("\n"),q=M.every(e=>""===e.trim());q&&M.length>1&&M.pop();let H={node:{current:E,parent:C.parent??null,root:C.root??E,next:C.root?.children?.[C.index+1]??null,previous:C.root?.children?.[C.index-1]??null},pointer:F};return M.map((e,t)=>t<M.length-1?e+this.#c(H):e).join("")}return E.content}if("tag"===E.type){let I=this.#a.find(e=>e.name===E.name),O=E.children.map(e=>this.#i(e,C)).join(""),V=E.value?"="+E.value:"";if(!I){if(!0===z){let K={index:C.index??0,depth:(C.path??"0").split(".").length-1,path:C.path??"0"};return C.errors?.push({errorType:"unknown-tag",node:{current:E,parent:C.parent??null,root:C.root??E,next:C.root?.children?.[C.index+1]??null,previous:C.root?.children?.[C.index-1]??null},pointer:K}),O}return`[${E.name}${V}]${O}${E.closingPosition?`[/${E.name}]`:""}`}let S=E.children.map((e,t)=>this.#i(e,{...C,index:t,path:(C.path??"")+"."+t,parent:E})).join(""),U={index:C.index??0,path:C.path??"0",depth:(C.path??"0").split(".").length-1},Y={node:{current:E,parent:C.parent??null,root:C.root??E,next:C.root?.children?.[C.index+1]??null,previous:C.root?.children?.[C.index-1]??null},pointer:U},{messages:D,override:G}=this.#j(Y);if(D.length>0)return C.errors?.push(...D),G??"";let J={};for(let Q of I.attrNames){let X=this.parse(E.value??"").output;J[Q]=X}for(let ee of I.contentNames)J[ee]=S.trim();if("function"==typeof I.render)return I.render({node:{current:E,parent:C.parent??null,root:C.root??E,next:C.root?.children?.[C.index+1]??null,previous:C.root?.children?.[C.index-1]??null},pointer:U,variables:J});let et=I.render;for(let en of I.fullVars){let er=J[en]??"",ei=RegExp(`\\$${en}`,"g");et=et.replace(ei,er)}return et}return"root"===E.type?E.children.map((e,t)=>this.#i(e,{index:t,path:`${t}`,parent:null,root:E,errors:C.errors??[]},z,L)).join(""):""}#e(el){let eo=el.template.match(/^\[([a-z0-9*]+)(.*?)\](.*?)$/i);if(!eo)throw Error("Invalid template format");let es=el.name||eo[1].toLowerCase(),ep=eo[2],ea=eo[3],eu=[...ep.matchAll(/\$([a-zA-Z0-9_]+)/g)].map(e=>e[1]),eh=[...ea.matchAll(/\$([a-zA-Z0-9_]+)/g)].map(e=>e[1]);return{name:es,render:el.render,attrNames:eu,contentNames:eh,fullVars:[...new Set([...eu,...eh])]}}#f(ec){let ed=this.#d.inline,ef=this.#d.recursive,eg="<<<NEWLINE>>>";ec=ec.replace(/\r?\n/g,eg);let em=RegExp(`\\[(${ef.join("|")})(=([^\\[\\]]|\\[[^\\[\\]]*\\])*)?\\]([\\s\\S]*?)\\[\\/\\1\\]`,"gi");ec=ec.replace(em,(e,t,n="",r,i)=>{let l=this.#f(i.replaceAll(eg,"\n"),ed,ef);return`[${t}${n}]${l}[/${t}]`});let ex=e=>{if(!e.trim()||/^\s*\[\*\]/.test(e))return!1;let t=[...e.matchAll(/\[\/?([a-zA-Z0-9*]+)[^\]]*\]/g)].map(e=>e[1].toLowerCase());return t.every(e=>ed.includes(e)||"text"===e)},ey=ec.split(eg),e_=[],eb=[],ev=null,e$=!1,eT=()=>{if(eb.length){let e=eb.join(eg);e_.push(e$||e.startsWith("[text]")?e:`[text]${e}[/text]`),eb=[]}},e9=RegExp(`^\\[(${ef.join("|")})(=.*)?$`,"i"),ew=RegExp(`^\\[\\/(${ef.join("|")})\\]$`,"i");for(let ej of ey){let e8=ej.trim();if(ev){ev+=eg+ej,e8.endsWith("]")&&(eT(),e_.push(ev),e$=!0,ev=null);continue}e9.test(e8)&&!e8.endsWith("]")?ev=ej:e9.test(e8)?(eT(),e_.push(ej),e$=!0):ew.test(e8)?(eT(),e_.push(ej),e$=!1):""===e8?(eT(),e_.push("")):!e$&&ex(e8)?eb.push(ej):(eT(),e_.push(ej))}return eT(),e_.join(eg).replaceAll(eg,"\n")}escapeHTML(e){return e.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#039;")}}"undefined"!=typeof module&&module.exports?module.exports=EZPZ_BBCode_Parser:window.EZPZ_BBCode_Parser=EZPZ_BBCode_Parser;