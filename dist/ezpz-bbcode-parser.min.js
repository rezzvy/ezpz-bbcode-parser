class EZPZ_BBCode_Parser{#a=[];#b=[];#c=null;#d={inline:["b","i","s","u","link","c","spoiler","img","size","color"],recursive:["box","quote","notice","centre","spoilerbox"]};constructor(e=[]){if(!Array.isArray(e))throw TypeError("templateRules must be an array.");this.setRules(e)}set lineBreakTemplate(e){if("function"!=typeof e)throw TypeError("lineBreakTemplate must be a function.");this.#c=e}set textWrapTags(e){if("object"!=typeof e||!Array.isArray(e.inline)||!Array.isArray(e.recursive))throw TypeError("textWrapTags must be an object with 'inline' and 'recursive' arrays.");this.#d.inline=e.inline,this.#d.recursive=e.recursive}addRule(e){if(!e||"object"!=typeof e)throw TypeError("addRule expects a rule object.");this.#a.push(this.#e(e))}setRules(e){if(!Array.isArray(e))throw TypeError("setRules expects an array of rule objects.");this.#a=e.map(e=>{if(!e||"object"!=typeof e)throw TypeError("Each rule must be an object.");return this.#e(e)})}parse(e,t=!1){if("string"!=typeof e)throw TypeError("parse() expects the first argument to be a string.");if("boolean"!=typeof t)throw TypeError("parse() expects the second argument to be a boolean.");let n=e;t&&(n=this.#f(n));let r=[],i=this.#g(n),l=this.#h(i,r),o=this.#i(l,{errors:r});return{output:o,errors:r,tokens:i,tree:l,raw:n}}forbidden(e){if("function"!=typeof e)throw TypeError("forbidden() expects a function.");let t=[],n=(e,n="This is forbidden.")=>{if("function"!=typeof e)throw TypeError("Forbidden check function must be a function.");let r={fn:e,msg:n,handler:null},i=e=>{if("function"!=typeof e)throw TypeError("Forbidden 'then' handler must be a function.");r.handler=e};return t.push(r),{then:i}};e(n),this.#b.push(...t)}#j(e){let t=[],n=null;for(let{fn:r,msg:i,handler:l}of this.#b)if(r(e)&&(t.push({errorType:"forbidden",message:i,...e}),"function"==typeof l)){let o=l(e);void 0!==o&&null===n&&(n=o)}return{messages:t,override:n}}#g(s){let a=[],p=0,u=()=>{if("["!==s[p])return null;let e=p+1,t="",n="",r=!1,i=!1,l=0,o=p;if("/"===s[e]&&(r=!0,e++),!r&&"*"===s[e]&&"]"===s[++e]){let a=s.slice(p,e+1),u=e+1;return p=u,{type:"tag-open",name:"*",value:null,raw:a,position:{start:o,end:u}}}for(;e<s.length;){let h=s[e];if(!i&&"="===h){i=!0,e++;continue}if("["===h&&i&&l++,"]"===h){if(l>0)l--;else break}i?n+=h:t+=h,e++}if("]"!==s[e])return null;let d=s.slice(p,e+1),c=e+1;return p=c,{type:r?"tag-close":"tag-open",name:t.trim().toLowerCase(),value:i?n.trim():null,raw:d,position:{start:o,end:c}}};for(;p<s.length;){if("["===s[p]){let h=u();if(h){a.push(h);continue}a.push({type:"text",content:"[",position:{start:p,end:p+1}}),p+=1;continue}let d=s.indexOf("[",p);-1===d&&(d=s.length),a.push({type:"text",content:s.slice(p,d),position:{start:p,end:d}}),p=d}return a}#h(c,f=[]){let m={type:"root",children:[]},g=[{node:m,token:null}];for(let x=0;x<c.length;x++){let y=c[x],_=g[g.length-1].node;if("text"===y.type)_.children.push({type:"text",content:y.content,position:y.position});else if("tag-open"===y.type){if("*"===y.name){let b={type:"tag",name:"*",value:null,children:[],position:y.position};for(x++;x<c.length&&!("tag-open"===c[x].type&&("*"===c[x].name||"list"===c[x].name))&&!("tag-close"===c[x].type&&"list"===c[x].name);)b.children.push(c[x]),x++;x--,_.children.push(b)}else{let v={type:"tag",name:y.name,value:y.value,children:[],position:y.position,closingPosition:null};_.children.push(v),g.push({node:v,token:y})}}else if("tag-close"===y.type){let $=g[g.length-1];g.length>1&&$.node.name===y.name?($.node.closingPosition=y.position,g.pop()):(_.children.push({type:"text",content:`[/${y.name}]`,position:y.position}),f?.push({errorType:"unexpected-closing",node:{current:{children:null,closingPosition:null,name:y.name,position:y.position,type:"tag",value:null}},pointer:null}))}}for(let w=g.length-1;w>=1;w--){let{node:T}=g[w];f?.push({errorType:"unclosed-tag",node:{current:T,parent:null,root:null,next:null,previous:null},pointer:null})}return m}#i(j,B={}){if("text"===j.type){if("function"==typeof this.#c){let k={index:B.index??0,path:B.path??"0",depth:(B.path??"0").split(".").length-1},A=j.content.split("\n"),P=A.every(e=>""===e.trim());P&&A.length>1&&A.pop();let Z={node:{current:j,parent:B.parent??null,root:B.root??j,next:B.root?.children?.[B.index+1]??null,previous:B.root?.children?.[B.index-1]??null},pointer:k};return A.map((e,t)=>t<A.length-1?e+this.#c(Z):e).join("")}return j.content}if("tag"===j.type){let N=this.#a.find(e=>e.name===j.name);if(!N){let R={index:B.index??0,depth:(B.path??"0").split(".").length-1,path:B.path??"0"};B.errors?.push({errorType:"unknown-tag",node:{current:j,parent:B.parent??null,root:B.root??j,next:B.root?.children?.[B.index+1]??null,previous:B.root?.children?.[B.index-1]??null},pointer:R});let W=j.children.map(e=>this.#i(e,B)).join(""),C=j.value?"="+j.value:"";return`[${j.name}${C}]${W}[/${j.name}]`}let E=j.children.map((e,t)=>this.#i(e,{...B,index:t,path:(B.path??"")+"."+t,parent:j})).join(""),z={index:B.index??0,path:B.path??"0",depth:(B.path??"0").split(".").length-1},L={node:{current:j,parent:B.parent??null,root:B.root??j,next:B.root?.children?.[B.index+1]??null,previous:B.root?.children?.[B.index-1]??null},pointer:z},{messages:F,override:I}=this.#j(L);if(F.length>0)return B.errors?.push(...F),I??"";let V={};for(let q of N.attrNames){let O=this.parse(j.value??"").output;V[q]=O}for(let S of N.contentNames)V[S]=E.trim();if("function"==typeof N.render)return N.render({node:{current:j,parent:B.parent??null,root:B.root??j,next:B.root?.children?.[B.index+1]??null,previous:B.root?.children?.[B.index-1]??null},pointer:z,variables:V});let D=N.render;for(let G of N.fullVars){let H=V[G]??"",J=RegExp(`\\$${G}`,"g");D=D.replace(J,H)}return D}return"root"===j.type?j.children.map((e,t)=>this.#i(e,{index:t,path:`${t}`,parent:null,root:j,errors:B.errors??[]})).join(""):""}#e(K){let M=K.template.match(/^\[([a-z0-9*]+)(.*?)\](.*?)$/i);if(!M)throw Error("Invalid template format");let Q=K.name||M[1].toLowerCase(),U=M[2],X=M[3],Y=[...U.matchAll(/\$([a-zA-Z0-9_]+)/g)].map(e=>e[1]),ee=[...X.matchAll(/\$([a-zA-Z0-9_]+)/g)].map(e=>e[1]);return{name:Q,render:K.render,attrNames:Y,contentNames:ee,fullVars:[...new Set([...Y,...ee])]}}#f(et){let en=this.#d.inline,er=this.#d.recursive,ei="<<<NEWLINE>>>";et=et.replace(/\r?\n/g,ei);let el=RegExp(`\\[(${er.join("|")})(=([^\\[\\]]|\\[[^\\[\\]]*\\])*)?\\]([\\s\\S]*?)\\[\\/\\1\\]`,"gi");et=et.replace(el,(e,t,n="",r,i)=>{let l=this.#f(i.replaceAll(ei,"\n"),en,er);return`[${t}${n}]${l}[/${t}]`});let eo=e=>{if(!e.trim()||/^\s*\[\*\]/.test(e))return!1;let t=[...e.matchAll(/\[\/?([a-zA-Z0-9*]+)[^\]]*\]/g)].map(e=>e[1].toLowerCase());return t.every(e=>en.includes(e)||"text"===e)},es=et.split(ei),ea=[],ep=[],eu=null,eh=!1,ed=()=>{if(ep.length){let e=ep.join(ei);ea.push(eh||e.startsWith("[text]")?e:`[text]${e}[/text]`),ep=[]}},ec=RegExp(`^\\[(${er.join("|")})(=.*)?$`,"i"),ef=RegExp(`^\\[\\/(${er.join("|")})\\]$`,"i");for(let em of es){let eg=em.trim();if(eu){eu+=ei+em,eg.endsWith("]")&&(ed(),ea.push(eu),eh=!0,eu=null);continue}ec.test(eg)&&!eg.endsWith("]")?eu=em:ec.test(eg)?(ed(),ea.push(em),eh=!0):ef.test(eg)?(ed(),ea.push(em),eh=!1):""===eg?(ed(),ea.push("")):!eh&&eo(eg)?ep.push(em):(ed(),ea.push(em))}return ed(),ea.join(ei).replaceAll(ei,"\n")}}"undefined"!=typeof module&&module.exports?module.exports=EZPZ_BBCode_Parser:window.EZPZ_BBCode_Parser=EZPZ_BBCode_Parser;