class EZPZ_BBCode_Parser{#a=[];#b=[];#c=null;#d={inline:["b","i","s","u","link","c","spoiler","img","size","color"],recursive:["box","quote","notice","centre","spoilerbox"]};constructor(e=[]){if(!Array.isArray(e))throw TypeError("templateRules must be an array.");this.setRules(e)}set lineBreakTemplate(e){if("function"!=typeof e)throw TypeError("lineBreakTemplate must be a function.");this.#c=e}set textWrapTags(e){if("object"!=typeof e||!Array.isArray(e.inline)||!Array.isArray(e.recursive))throw TypeError("textWrapTags must be an object with 'inline' and 'recursive' arrays.");this.#d.inline=e.inline,this.#d.recursive=e.recursive}addRule(e){if(!e||"object"!=typeof e)throw TypeError("addRule expects a rule object.");this.#a.push(this.#e(e))}setRules(e){if(!Array.isArray(e))throw TypeError("setRules expects an array of rule objects.");this.#a=e.map(e=>{if(!e||"object"!=typeof e)throw TypeError("Each rule must be an object.");return this.#e(e)})}parse(e,t={wrapText:!1,strictUnknownTag:!0,strictClosingTag:!1}){if("string"!=typeof e)throw TypeError("parse() expects the first argument to be a string.");("object"!=typeof t||null===t)&&(t={});let{wrapText:n=!1,strictUnknownTag:r=!0,strictClosingTag:i=!1}=t,o=e;n&&(o=this.#f(o));let l=[],s=this.#g(o),a=this.#h(s,l,i),p=this.#i(a,{errors:l},r,i);return{output:p,errors:l,tokens:s,tree:a,raw:o}}forbidden(e){if("function"!=typeof e)throw TypeError("forbidden() expects a function.");let t=[],n=(e,n="This is forbidden.")=>{if("function"!=typeof e)throw TypeError("Forbidden check function must be a function.");let r={fn:e,msg:n,handler:null},i=e=>{if("function"!=typeof e)throw TypeError("Forbidden 'then' handler must be a function.");r.handler=e};return t.push(r),{then:i}};e(n),this.#b.push(...t)}#j(e){let t=[],n=null;for(let{fn:r,msg:i,handler:o}of this.#b)if(r(e)&&(t.push({errorType:"forbidden",message:i,...e}),"function"==typeof o)){let l=o(e);void 0!==l&&null===n&&(n=l)}return{messages:t,override:n}}#g(s){let a=[],p=0,u=()=>{if("["!==s[p])return null;let e=p+1,t="",n="",r=!1,i=!1,o=0,l=p;if("/"===s[e]&&(r=!0,e++),!r&&"*"===s[e]&&"]"===s[++e]){let a=s.slice(p,e+1),u=e+1;return p=u,{type:"tag-open",name:"*",value:null,raw:a,position:{start:l,end:u}}}for(;e<s.length;){let h=s[e];if(!i&&"="===h){i=!0,e++;continue}if("["===h&&i&&o++,"]"===h){if(o>0)o--;else break}i?n+=h:t+=h,e++}if("]"!==s[e])return null;let d=s.slice(p,e+1),c=e+1;return p=c,{type:r?"tag-close":"tag-open",name:t.trim().toLowerCase(),value:i?n.trim():null,raw:d,position:{start:l,end:c}}};for(;p<s.length;){if("["===s[p]){let h=u();if(h){a.push(h);continue}a.push({type:"text",content:"[",position:{start:p,end:p+1}}),p+=1;continue}let d=s.indexOf("[",p);-1===d&&(d=s.length),a.push({type:"text",content:s.slice(p,d),position:{start:p,end:d}}),p=d}return a}#h(c,f=[],m=!1){let g={type:"root",children:[]},x=[{node:g,token:null}];for(let y=0;y<c.length;y++){let _=c[y],b=x[x.length-1].node;if("text"===_.type)b.children.push({type:"text",content:_.content,position:_.position});else if("tag-open"===_.type){if("*"===_.name){let v={type:"tag",name:"*",value:null,children:[],position:_.position};for(y++;y<c.length&&!("tag-open"===c[y].type&&("*"===c[y].name||"list"===c[y].name))&&!("tag-close"===c[y].type&&"list"===c[y].name);)v.children.push(c[y]),y++;y--,b.children.push(v)}else{let $={type:"tag",name:_.name,value:_.value,children:[],position:_.position,closingPosition:null};b.children.push($),x.push({node:$,token:_})}}else if("tag-close"===_.type){if(m){let T=x[x.length-1];x.length>1&&T.node.name===_.name?(T.node.closingPosition=_.position,x.pop()):(b.children.push({type:"text",content:`[/${_.name}]`,position:_.position}),f?.push({errorType:"unexpected-closing",node:{current:{children:null,closingPosition:null,name:_.name,position:_.position,type:"tag",value:null}},pointer:null}))}else{let w=-1;for(let j=x.length-1;j>=1;j--)if(x[j].node.name===_.name){w=j;break}if(-1!==w){let k=x[w];k.node.closingPosition=_.position,x.splice(w)}else b.children.push({type:"text",content:`[/${_.name}]`,position:_.position}),f?.push({errorType:"unexpected-closing",node:{current:{children:null,closingPosition:null,name:_.name,position:_.position,type:"tag",value:null}},pointer:null})}}}if(m)for(let P=x.length-1;P>=1;P--){let{node:B}=x[P],A=x[P-1].node,N=A.children.indexOf(B);if(-1!==N){let Z=`[${B.name}${B.value?"="+B.value:""}]`+B.children.map(e=>"text"===e.type?e.content:this.#i(e,{},!0,!1)).join("");A.children[N]={type:"text",content:Z,position:B.position}}f?.push({errorType:"unclosed-tag",node:{current:B,parent:null,root:null,next:null,previous:null},pointer:null})}return g}#i(R,W={},C=!0,E=!1){if("text"===R.type){if("function"==typeof this.#c){let z={index:W.index??0,path:W.path??"0",depth:(W.path??"0").split(".").length-1},L=R.content.split("\n"),F=L.every(e=>""===e.trim());F&&L.length>1&&L.pop();let I={node:{current:R,parent:W.parent??null,root:W.root??R,next:W.root?.children?.[W.index+1]??null,previous:W.root?.children?.[W.index-1]??null},pointer:z};return L.map((e,t)=>t<L.length-1?e+this.#c(I):e).join("")}return R.content}if("tag"===R.type){let O=this.#a.find(e=>e.name===R.name),V=R.children.map(e=>this.#i(e,W)).join(""),q=R.value?"="+R.value:"";if(!O){if(!0===C){let S={index:W.index??0,depth:(W.path??"0").split(".").length-1,path:W.path??"0"};return W.errors?.push({errorType:"unknown-tag",node:{current:R,parent:W.parent??null,root:W.root??R,next:W.root?.children?.[W.index+1]??null,previous:W.root?.children?.[W.index-1]??null},pointer:S}),V}return`[${R.name}${q}]${V}${R.closingPosition?`[/${R.name}]`:""}`}let U=R.children.map((e,t)=>this.#i(e,{...W,index:t,path:(W.path??"")+"."+t,parent:R})).join(""),D={index:W.index??0,path:W.path??"0",depth:(W.path??"0").split(".").length-1},G={node:{current:R,parent:W.parent??null,root:W.root??R,next:W.root?.children?.[W.index+1]??null,previous:W.root?.children?.[W.index-1]??null},pointer:D},{messages:H,override:J}=this.#j(G);if(H.length>0)return W.errors?.push(...H),J??"";let K={};for(let M of O.attrNames){let Q=this.parse(R.value??"").output;K[M]=Q}for(let X of O.contentNames)K[X]=U.trim();if("function"==typeof O.render)return O.render({node:{current:R,parent:W.parent??null,root:W.root??R,next:W.root?.children?.[W.index+1]??null,previous:W.root?.children?.[W.index-1]??null},pointer:D,variables:K});let Y=O.render;for(let ee of O.fullVars){let et=K[ee]??"",en=RegExp(`\\$${ee}`,"g");Y=Y.replace(en,et)}return Y}return"root"===R.type?R.children.map((e,t)=>this.#i(e,{index:t,path:`${t}`,parent:null,root:R,errors:W.errors??[]},C,E)).join(""):""}#e(er){let ei=er.template.match(/^\[([a-z0-9*]+)(.*?)\](.*?)$/i);if(!ei)throw Error("Invalid template format");let eo=er.name||ei[1].toLowerCase(),el=ei[2],es=ei[3],ea=[...el.matchAll(/\$([a-zA-Z0-9_]+)/g)].map(e=>e[1]),ep=[...es.matchAll(/\$([a-zA-Z0-9_]+)/g)].map(e=>e[1]);return{name:eo,render:er.render,attrNames:ea,contentNames:ep,fullVars:[...new Set([...ea,...ep])]}}#f(eu){let eh=this.#d.inline,ed=this.#d.recursive,ec="<<<NEWLINE>>>";eu=eu.replace(/\r?\n/g,ec);let ef=RegExp(`\\[(${ed.join("|")})(=([^\\[\\]]|\\[[^\\[\\]]*\\])*)?\\]([\\s\\S]*?)\\[\\/\\1\\]`,"gi");eu=eu.replace(ef,(e,t,n="",r,i)=>{let o=this.#f(i.replaceAll(ec,"\n"),eh,ed);return`[${t}${n}]${o}[/${t}]`});let em=e=>{if(!e.trim()||/^\s*\[\*\]/.test(e))return!1;let t=[...e.matchAll(/\[\/?([a-zA-Z0-9*]+)[^\]]*\]/g)].map(e=>e[1].toLowerCase());return t.every(e=>eh.includes(e)||"text"===e)},eg=eu.split(ec),ex=[],ey=[],e_=null,eb=!1,ev=()=>{if(ey.length){let e=ey.join(ec);ex.push(eb||e.startsWith("[text]")?e:`[text]${e}[/text]`),ey=[]}},e$=RegExp(`^\\[(${ed.join("|")})(=.*)?$`,"i"),e9=RegExp(`^\\[\\/(${ed.join("|")})\\]$`,"i");for(let eT of eg){let ew=eT.trim();if(e_){e_+=ec+eT,ew.endsWith("]")&&(ev(),ex.push(e_),eb=!0,e_=null);continue}e$.test(ew)&&!ew.endsWith("]")?e_=eT:e$.test(ew)?(ev(),ex.push(eT),eb=!0):e9.test(ew)?(ev(),ex.push(eT),eb=!1):""===ew?(ev(),ex.push("")):!eb&&em(ew)?ey.push(eT):(ev(),ex.push(eT))}return ev(),ex.join(ec).replaceAll(ec,"\n")}}"undefined"!=typeof module&&module.exports?module.exports=EZPZ_BBCode_Parser:window.EZPZ_BBCode_Parser=EZPZ_BBCode_Parser;