class EZPZ_BBCode_Parser{constructor(e=[]){this.setRules(e),this.forbiddenRules=[],this.lineBreakTemplate=null}wrapNodeText(e,t,n){let r=t||["b","i","u","s","url","img","color","size"],l=n||["spoiler","quote","notice","centre","box"],o="<<<NEWLINE>>>";e=e.replace(/\r?\n/g,o);let i=RegExp(`\\[(${l.join("|")})(=([^\\[\\]]|\\[[^\\[\\]]*\\])*)?\\]([\\s\\S]*?)\\[\\/\\1\\]`,"gi");e=e.replace(i,(e,t,n="",i,p)=>{let s=this.wrapNodeText(p.replaceAll(o,"\n"),r,l);return`[${t}${n}]${s}[/${t}]`});let p=e=>{if(!e.trim()||/^\s*\[\*\]/.test(e))return!1;let t=[...e.matchAll(/\[\/?([a-zA-Z0-9*]+)[^\]]*\]/g)].map(e=>e[1].toLowerCase());return t.every(e=>r.includes(e)||"text"===e)},s=e.split(o),a=[],u=[],d=null,h=!1,c=()=>{if(u.length){let e=u.join(o);a.push(h||e.startsWith("[text]")?e:`[text]${e}[/text]`),u=[]}},f=RegExp(`^\\[(${l.join("|")})(=.*)?$`,"i"),m=RegExp(`^\\[\\/(${l.join("|")})\\]$`,"i");for(let g of s){let x=g.trim();if(d){d+=o+g,x.endsWith("]")&&(c(),a.push(d),h=!0,d=null);continue}f.test(x)&&!x.endsWith("]")?d=g:f.test(x)?(c(),a.push(g),h=!0):m.test(x)?(c(),a.push(g),h=!1):""===x?(c(),a.push("")):!h&&p(x)?u.push(g):(c(),a.push(g))}return c(),a.join(o).replaceAll(o,"\n")}setRules(e){this.rules=e.map(e=>{let t=e.template.match(/^\[([a-z0-9*]+)(.*?)\](.*?)$/i);if(!t)throw Error("Invalid template format");let n=e.name||t[1].toLowerCase(),r=t[2],l=t[3],o=[...r.matchAll(/\$([a-zA-Z0-9_]+)/g)].map(e=>e[1]),i=[...l.matchAll(/\$([a-zA-Z0-9_]+)/g)].map(e=>e[1]);return{name:n,render:e.render,attrNames:o,contentNames:i,fullVars:[...new Set([...o,...i])]}})}forbidden(e){let t=[],n=(e,n="This is forbidden.")=>{let r={fn:e,msg:n,handler:null},l=e=>{r.handler=e};return t.push(r),{then:l}};e(n),this.forbiddenRules.push(...t)}checkForbidden(e){let t=[],n=null;for(let{fn:r,msg:l,handler:o}of this.forbiddenRules)if(r(e)&&(t.push({message:l,type:"forbidden",tag:e.node?.name,position:e.position??{}}),"function"==typeof o)){let i=o(e);void 0!==i&&null===n&&(n=i)}return{messages:t,override:n}}tokenize(e){let t=[],n=0,r=()=>{if("["!==e[n])return null;let t=n+1,r="",l="",o=!1,i=!1,p=0,s=n;if("/"===e[t]&&(o=!0,t++),!o&&"*"===e[t]&&"]"===e[++t]){let a=e.slice(n,t+1),u=t+1;return n=u,{type:"tag-open",name:"*",value:null,raw:a,position:{start:s,end:u}}}for(;t<e.length;){let d=e[t];if(!i&&"="===d){i=!0,t++;continue}if("["===d&&i&&p++,"]"===d){if(p>0)p--;else break}i?l+=d:r+=d,t++}if("]"!==e[t])return null;let h=e.slice(n,t+1),c=t+1;return n=c,{type:o?"tag-close":"tag-open",name:r.trim().toLowerCase(),value:i?l.trim():null,raw:h,position:{start:s,end:c}}};for(;n<e.length;){if("["===e[n]){let l=r();if(l){t.push(l);continue}}let o=e.indexOf("[",n);-1===o&&(o=e.length),t.push({type:"text",content:e.slice(n,o),position:{start:n,end:o}}),n=o}return t}buildTree(e,t=[]){let n={type:"root",children:[]},r=[{node:n,token:null}];for(let l=0;l<e.length;l++){let o=e[l],i=r[r.length-1].node;if("text"===o.type)i.children.push({type:"text",content:o.content,position:o.position});else if("tag-open"===o.type){if("*"===o.name){let p={type:"tag",name:"*",value:null,children:[],position:o.position};for(l++;l<e.length&&!("tag-open"===e[l].type&&("*"===e[l].name||"list"===e[l].name))&&!("tag-close"===e[l].type&&"list"===e[l].name);)p.children.push(e[l]),l++;l--,i.children.push(p)}else{let s={type:"tag",name:o.name,value:o.value,children:[],position:o.position,closingPosition:null};i.children.push(s),r.push({node:s,token:o})}}else if("tag-close"===o.type){let a=r[r.length-1];r.length>1&&a.node.name===o.name?(a.node.closingPosition=o.position,r.pop()):(i.children.push({type:"text",content:`[/${o.name}]`,position:o.position}),t?.push({errorType:"unexpected-closing",node:{current:{children:null,closingPosition:null,name:o.name,position:o.position,type:"tag",value:null}},pointer:null}))}}for(let u=r.length-1;u>=1;u--){let{node:d}=r[u];t?.push({errorType:"unclosed-tag",node:{current:d,parent:null,root:null,next:null,previous:null},pointer:null})}return n}renderNode(e,t={}){if("text"===e.type){if("function"==typeof this.lineBreakTemplate){let n={index:t.index??0,path:t.path??"0",depth:(t.path??"0").split(".").length-1},r=e.content.split("\n"),l=r.every(e=>""===e.trim());l&&r.length>1&&r.pop();let o={node:{current:e,parent:t.parent??null,root:t.root??e,next:t.root?.children?.[t.index+1]??null,previous:t.root?.children?.[t.index-1]??null},pointer:n};return r.map((e,t)=>t<r.length-1?e+this.lineBreakTemplate(o):e).join("")}return e.content}if("tag"===e.type){let i=this.rules.find(t=>t.name===e.name);if(!i){let p={index:t.index??0,depth:(t.path??"0").split(".").length-1,path:t.path??"0"};t.errors?.push({errorType:"unknown-tag",node:{current:e,parent:t.parent??null,root:t.root??e,next:t.root?.children?.[t.index+1]??null,previous:t.root?.children?.[t.index-1]??null},pointer:p});let s=e.children.map(e=>this.renderNode(e,t)).join(""),a=e.value?"="+e.value:"";return`[${e.name}${a}]${s}[/${e.name}]`}let u=e.children.map((n,r)=>this.renderNode(n,{...t,index:r,path:(t.path??"")+"."+r,parent:e})).join(""),d={index:t.index??0,path:t.path??"0",depth:(t.path??"0").split(".").length-1},h={node:{current:e,parent:t.parent??null,root:t.root??e,next:t.root?.children?.[t.index+1]??null,previous:t.root?.children?.[t.index-1]??null},pointer:d},{messages:c,override:f}=this.checkForbidden(h);if(c.length>0)return t.errors?.push(...c),f??"";let m={};for(let g of i.attrNames){let x=this.parse(e.value??"").html;m[g]=x}for(let _ of i.contentNames)m[_]=u.trim();if("function"==typeof i.render)return i.render({node:{current:e,parent:t.parent??null,root:t.root??e,next:t.root?.children?.[t.index+1]??null,previous:t.root?.children?.[t.index-1]??null},pointer:d,variables:m});let y=i.render;for(let $ of i.fullVars){let v=m[$]??"",b=RegExp(`\\$${$}`,"g");y=y.replace(b,v)}return y}return"root"===e.type?e.children.map((n,r)=>this.renderNode(n,{index:r,path:`${r}`,parent:null,root:e,errors:t.errors??[]})).join(""):""}parse(e,t=!1){let n=e;t&&(n=this.wrapNodeText(n));let r=this.tokenize(n),l=[],o=this.buildTree(r,l),i=this.renderNode(o,{errors:l});return{html:i,errors:l,tree:o}}}"undefined"!=typeof module&&module.exports?module.exports=EZPZ_BBCode_Parser:window.EZPZ_BBCode_Parser=EZPZ_BBCode_Parser;